{"ast":null,"code":"import _regeneratorRuntime from \"/Users/salman/Desktop/helios/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/salman/Desktop/helios/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/salman/Desktop/helios/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/salman/Desktop/helios/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/salman/Desktop/helios/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/salman/Desktop/helios/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/salman/Desktop/helios/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/salman/Desktop/helios/src/App.js\";\nimport React from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nvar API_KEY = \"b6b9a55a8207649a609ae3b048e3c350\"; // Instance of app uses react component\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // In charge of changing data and interation\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n              case 5:\n                api_call = _context.sent;\n                _context.next = 8;\n                return api_call.json();\n\n              case 8:\n                data = _context.sent;\n                console.log(data);\n\n                _this.setState({\n                  temperature: data.main.temp,\n                  city: data.name,\n                  country: data.sys.country,\n                  humidity: data.main.humidity,\n                  description: data.weather[0].description,\n                  error: \"\"\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return (// JSX portion\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Titles, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(Form, {\n          getWeather: this.getWeather,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(Weather, {\n          temperature: this.state.temperature // Passing in props from state\n          ,\n          city: this.state.city,\n          country: this.state.country,\n          humidity: this.state.humidity,\n          description: this.state.description,\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\n;\nexport default App; // Make available for other files","map":{"version":3,"sources":["/Users/salman/Desktop/helios/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","fetch","api_call","json","data","console","log","setState","main","temp","name","sys","weather","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,IAAMC,OAAO,GAAG,kCAAhB,C,CAEA;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAE;AACRC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,KAAK,EAAEL;AAND,K;;UAQRM,U;;;;;+BAAa,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,CAAC,CAACC,cAAF;AACMP,gBAAAA,IAFK,GAEEM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAFzB;AAGLT,gBAAAA,OAHK,GAGKK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAH/B;AAAA;AAAA,uBAKYC,KAAK,4DAAqDX,IAArD,cAA6DC,OAA7D,oBAA8EN,OAA9E,mBALjB;;AAAA;AAKLiB,gBAAAA,QALK;AAAA;AAAA,uBAMQA,QAAQ,CAACC,IAAT,EANR;;AAAA;AAMLC,gBAAAA,IANK;AAOXC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,sBAAKG,QAAL,CAAc;AACZnB,kBAAAA,WAAW,EAAEgB,IAAI,CAACI,IAAL,CAAUC,IADX;AAEZnB,kBAAAA,IAAI,EAAEc,IAAI,CAACM,IAFC;AAGZnB,kBAAAA,OAAO,EAAEa,IAAI,CAACO,GAAL,CAASpB,OAHN;AAIZC,kBAAAA,QAAQ,EAAEY,IAAI,CAACI,IAAL,CAAUhB,QAJR;AAKZC,kBAAAA,WAAW,EAAEW,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBnB,WALjB;AAMZC,kBAAAA,KAAK,EAAE;AANK,iBAAd;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAkBJ;AACP,aAAS;AACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,IAAD;AAAM,UAAA,UAAU,EAAE,KAAKC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,OAAD;AACE,UAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,WAD1B,CACuC;AADvC;AAEE,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFnB;AAGE,UAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHtB;AAIE,UAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJvB;AAKE,UAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAL1B;AAME,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AADF;AAcD;;;;EA1Ceb,KAAK,CAACgC,S;;AA2CvB;AAED,eAAe3B,GAAf,C,CAAoB","sourcesContent":["import React from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\nconst API_KEY = \"b6b9a55a8207649a609ae3b048e3c350\";\n\n// Instance of app uses react component\nclass App extends React.Component {\n  state = { // In charge of changing data and interation\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    console.log(data);\n    this.setState({\n      temperature: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      humidity: data.main.humidity,\n      description: data.weather[0].description,\n      error: \"\"\n    })\n  }\n\n  render() {\n    return ( // JSX portion\n      <div>\n        <Titles />\n        <Form getWeather={this.getWeather}/>\n        <Weather\n          temperature={this.state.temperature} // Passing in props from state\n          city={this.state.city}\n          country={this.state.country}\n          humidity={this.state.humidity}\n          description={this.state.description}\n          error={this.state.error}\n        />\n      </div>\n    );\n  }\n};\n\nexport default App; // Make available for other files\n"]},"metadata":{},"sourceType":"module"}